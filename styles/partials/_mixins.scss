@use "variables" as *;

//Type kit
@mixin font-styles($type,$device: "default") {
  font-family: map-get(map-get($font-styles, "font-family"), $device);
  font-weight: map-get(map-get($font-styles, "font-weight"),$device, $type);
  font-size: map-get(map-get($font-styles, "font-size"), $device, $type);
  line-height: map-get(map-get($font-styles, "line-height"), $device, $type);
}

@mixin header-padding($device:"desktop") {
  padding-top: map-get(map-get($padding, $device), 'pt-head');
  padding-bottom: map-get(map-get($padding, $device), 'pb-head');
}

@mixin comp-padding($device:"desktop") {
  padding-left: map-get(map-get($padding, $device), 'p-comp');
  padding-right: map-get(map-get($padding, $device), 'p-comp');
}

//Layout Grid

@mixin layout-grid($device: "desktop") {
  $gutter: map-get(map-get($grids, "gutters"), $device);

  gap: $gutter;
}


//Breakpoint
@mixin mobile {
  @media only screen and (max-width: map-get($breakpoints, 'tablet') - 1px) {
    @content;
  }
}

@mixin tablet {
  @media only screen and (min-width: map-get($breakpoints, 'tablet')) and (max-width: map-get($breakpoints, 'desktop') - 1px) {
    @content;
  }
}

@mixin desktop {
  @media only screen and (min-width: map-get($breakpoints, 'desktop')) {
    @content;
  }
}


//
@mixin background-opacity($image-url,$opacity: 0.5) {
  background: linear-gradient(rgba(map-get($colors, 'bandsite-black'), $opacity), rgba(map-get($colors, 'bandsite-black'), $opacity)),
  url($image-url) no-repeat center center / cover;
  height: 100vh;

  @include tablet{
    max-height: 75vh;
  }

  @include mobile{
    max-height: 50vh;
  }
}

//generate gallery images
@mixin generate-images($count) {
  @for $i from 1 through $count {
    img.photo-gallery-#{$i} {
      content: url('#{$assetsPath}Photo-gallery-#{$i}.jpg');
    }
  }
}
